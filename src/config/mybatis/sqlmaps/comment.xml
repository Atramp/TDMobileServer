<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="KPI_COMMENT">
    <select id="queryCommentById" resultType="UpperCaseMap">
        SELECT
            C1.COMMENT_ID,
            C1.COMMENT_AUTHOR,
            C1.COMMENT_CONTENT,
            C1.CREATE_TIME,
            CR.KPI_NO,
            CR.STATIS_DATE
         FROM
            ${dbName}.KPI_MBL_BI_COMMENT C1
   INNER JOIN
 			${dbName}.KPI_MBL_BI_COMMENT_RELA CR
 		   ON C1.COMMENT_ID = CR.COMMENT_ID
        WHERE
            C1.COMMENT_ID = #{COMMENT_ID}
          AND
            CR.STATUS = '0'
    </select>
    <select id="queryCommentCountBySet" resultType="UpperCaseMap">
        SELECT
			SR.KPI_SET_ID
			count(CR.comment_id) as NUM
 		FROM
 		    ${dbName}.KPI_MBL_BI_M_SET_RELA SR
        LEFT JOIN
 			${dbName}.KPI_MBL_BI_COMMENT_RELA CR
 		   ON
 		    CR.KPI_NO = SR.KPI_NO
 		WHERE
 		    SR.KPI_SET_ID = #{KPI_SET_ID}
 		  AND
 		    CR.STATIS_DATE = #{STATIS_DATE}
 		GROUP BY
 		    S.KPI_SET_ID
    </select>
    <select id="queryUnreadCommentCountBySet" resultType="UpperCaseMap">
        SELECT 
            SR.KPI_SET_ID, SR.KPI_NO, COUNT(KU.COMMENT_ID) as NUM
        FROM
            ${dbName}.KPI_MBL_BI_M_SET_RELA SR
                LEFT JOIN
            (SELECT 
                CR.KPI_NO, CR.COMMENT_ID
            FROM
                ${dbName}.KPI_MBL_BI_COMMENT_RELA CR
            INNER JOIN (SELECT 
                USERNAME, MAX(LAST_READ_ID) AS LAST_READ_ID
            FROM
                ${dbName}.KPI_MBL_BI_COMMENT_LAST_READ GROUP BY USERNAME) LR ON CR.COMMENT_ID > LR.LAST_READ_ID
            WHERE
                CR.STATIS_DATE = #{STATIS_DATE}
                    AND LR.USERNAME = #{USERNAME}) KU ON SR.KPI_NO = KU.KPI_NO
        GROUP BY KPI_SET_ID, SR.KPI_NO;

    </select>
    <select id="queryCommentsByKpi" resultType="LowerCaseMap">
        SELECT
            C1.COMMENT_ID ,
            CR.STATUS ,
            C2.COMMENT_ID AS REPLY_TO_ID,
            C2.COMMENT_AUTHOR AS REPLY_TO ,
            C1.COMMENT_AUTHOR ,
            C1.COMMENT_CONTENT ,
            C1.CREATE_TIME
         FROM
            ${dbName}.KPI_MBL_BI_COMMENT_RELA CR
        INNER JOIN
            ${dbName}.KPI_MBL_BI_COMMENT C1
           ON
            CR.COMMENT_ID = C1.COMMENT_ID
        LEFT JOIN
            ${dbName}.KPI_MBL_BI_COMMENT C2
           ON
            C1.post_to = C2.comment_id
        WHERE
            CR.KPI_NO = #{KPI_NO}
          AND
            CR.STATUS = '0'
          AND
            CR.STATIS_DATE = #{STATIS_DATE}
        ORDER BY C1.CREATE_TIME DESC
	</select>

    <insert id="insertUserLastRead">
        INSERT INTO ${dbName}.KPI_MBL_BI_COMMENT_LAST_READ(USERNAME,LAST_READ_ID,READ_TIME) VALUES (#{USERNAME},#{LAST_READ_ID},#{READ_TIME});
    </insert>
    <insert id="insertComment">
		INSERT INTO ${dbName}.KPI_MBL_BI_COMMENT(COMMENT_ID,POST_TO,COMMENT_AUTHOR,COMMENT_CONTENT,CREATE_TIME) VALUES (#{COMMENT.id},#{COMMENT.post_to},#{COMMENT.author},#{COMMENT.content},#{COMMENT.create_time});
	</insert>
    <insert id="insertKpiComment">
        INSERT INTO ${dbName}.KPI_MBL_BI_COMMENT_RELA(KPI_NO,STATIS_DATE,COMMENT_ID,STATUS) VALUES (#{KPI_NO},#{STATIS_DATE},#{COMMENT_ID},#{STATUS});
    </insert>
    <update id="updateCommentStatus">
        UPDATE ${dbName}.KPI_MBL_BI_COMMENT_RELA SET STATUS = #{STATUS} WHERE COMMENT_ID = #{COMMENT_ID}
    </update>
</mapper>